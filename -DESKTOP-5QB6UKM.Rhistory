library(openxlsx)
install.packages("openxlsx")
library(openxlsx)
df_inmet <- function(x, path=".") {
col <- c("data", "hora","prec","patm","patm.max","patm.min",
"rg","tar","tpo","tar.max","tar.min","tpo.max","tpo.min",
"ur.max","ur.min","ur","vento.dir","vento.raj","vento.vel","drop")
df <- c()
for (i in x) {
df <- rbind(df, rio::import(paste0(path, i),
skip = 8,
dec = ",",
col.names=col
))
}
df <- df %>%
mutate(data = ymd_hm(paste(data, hora), tz = "UTC")) %>%
mutate(data = with_tz(data, tzone="America/Sao_Paulo")) %>%
select(-c(hora, drop))
return(tibble(df))
}
muni_sc  <- function(x, alt, lat) {
x <- list.files(path="dados", pattern = x) %>%
df_inmet(path = "dados/") %>%
na_if(-9999) %>%
group_by(date(data)) %>%
summarise(
prec = sum(prec),
tar = mean(tar),
tar.min = min(tar.min),
tar.max = max(tar.max),
ur = mean(ur),
vento.vel = mean(vento.vel),
rg = sum(rg, na.rm = TRUE)
)  %>%
mutate(rg = case_when(is.na(prec) ~ NA_real_, TRUE ~ rg))  #rg=NA baseado prec
#verificar baseado em outras variáveis
## INSERIR EVAPOTRANSPIRAÇAO
TMax <- unlist(x[,5])
TMin <- unlist(x[,4])
TMed <- unlist(x[,3])
UR <- unlist(x[,6])
Vv <- unlist(x[,7])
Rg <- unlist(x[,8])
#adiciona a coluna da ETO
x <- cbind(x, ETO = ETOCalc(TMax, TMin, TMed, UR, Vv, Rg, alt, zv=2, lat))
}
ETOCalc <- function(TMax, TMin, TMed, UR, Vv, Rg, alt, zv, lat){
e0_TMax <- 0.6108*exp((17.27*TMax)/(TMax+237.3))
e0_TMin <- 0.6108*exp((17.27*TMin)/(TMin+237.3))
e0_TMed <- 0.6108*exp((17.27*TMed)/(TMed+237.3))
#Delta TMedia: declinacao da curva de saturacao
D_TMed <- 4098*e0_TMed/(TMed+237.3)^2
#pressao de saturacao de vapor
es <- (e0_TMax+e0_TMin)/2
#pressao de vapor atual do ar
ea <- e0_TMed*UR/100
#pressao atmosferica
P <- 101.3 * ((293-0.0065*alt)/293)^5.26
#constante psicrometrica
Y <- 0.001013/(0.622*2.45)*P
#dia juliano: a cada linha(dia) soma mais um
J <- 1
#
# #declinacao solar
sigma <- 0.409*sin(((2*pi*J)/365)-1.39)
#
# #distancia relativa inversa terra-sol
dr <- 1+0.033*cos(2*pi*J/365)
# #angulo da radiacao do sol
ws <- acos(-tan(lat)*tan(sigma))
# #fotoperiodo
N <- 24/pi*ws
# #radiacao solar extraterrestre
Ra <- (24*60/pi)*0.082*dr*(ws*sin(lat)*sin(sigma)+cos(lat)*cos(sigma)*sin(ws))
if (is.null(Rg)) {
#verificar se essa operacao que usa somente as temperaturas e adequada
Rs <- 0.16 * sqrt(TMax - TMin) * Ra
} else{
Rs <- Rg * 0.0864
#conferir se o Rg da estacao e o Rs abaixo
}
# #radiacao solar de ondas curtas
Rns <- (1 - 0.23)*Rs
# #radiacao solar em dias sem nuvens
Rso <- (0.75+0.00002*alt)*Ra
# #radiacao solar em ondas longas
Rnl <- 0.000000004903*(((TMax+273.16)^4+(TMin+273.16)^4)/2)*(0.34-0.14*sqrt(ea))*(1.35*Rs/Rso-0.35)
# #saldo de radiacao a superficie
Rn <- Rns - Rnl
# #alturada de medicao da velocidade do vento
#zv <- 10
#velocidade do vento a 2m do solo
U2 <- Vv * 4.87/(log(67.8*zv-5.42))
#******Calculo ETO*******
ETO <- (0.408*D_TMed*(Rn-0)+Y*(900/(TMed+273.16))*U2*(es-ea))/(D_TMed+Y*(1+0.34*U2))
return(ETO)
}
Boletim_indaial_dia <- muni_sc("INDAIAL", )
#install.packages("tidyverse")
library(tidyverse)
library(lubridate)
Boletim_indaial_dia <- muni_sc("INDAIAL", 86.13, -26.91361111)
## salvar xlsx ####
rio::export(Boletim_indaial_dia, "public/Boletim_indaial_dia.xlsx")
View(Boletim_indaial_dia)
###DADOS DIARIOS CURITIBANOS###
Boletim_curitibanos_dia <- muni_sc("CURITIBANOS", 1000, -0.4712)
View(Boletim_curitibanos_dia)
Boletim_indaial_dia <- muni_sc("INDAIAL", 86.13, -26.91361111)
Boletim_novohorizonte <- muni_sc("NOVO HORIZONTE", 960, -26.40694444)
View(Boletim_novohorizonte)
View(Boletim_indaial_dia)
View(Boletim_indaial_dia)
View(Boletim_curitibanos_dia)
View(Boletim_novohorizonte)
Boletim_indaial_dia <- muni_sc("INDAIAL_A817", 86.13, -26.91361111)
Boletim_indaial <- muni_sc("INDAIAL_A817", 86.13, -26.91361111)
View(Boletim_indaial)
